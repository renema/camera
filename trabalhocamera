import React, { useEffect, useRef, useState } from "react"
import { View, Text, StyleSheet, Button,Image } from "react-native"
import { useCameraPermissions, CameraView } from "expo-camera"

export default function Camera () {
    const [permissions, requestPermission] = useCameraPermissions()
    const [foto, setFoto]= useState(null)
    const [zoom, setZoom] = useState(0)
    const camera = useRef(null)
    useEffect(()=>{requestPermission()},[])
    const TirarFoto = function(){
        camera.current.takePicyureAsync()
        .then((img)=> console.log(img))
        setFoto(img)
        .catch((err)=> console.error(err))
    }
    const TrocarZoom = function(operacao) {
        if(operacao == '+' && zoom < 1){
            setZoom(zoom+0.1)
        } else if (operacao == '-' && zoom > 0) {
            setZoom(zoom-0.1)
        }
    }
    if(!permissions) {
        return(
            <View>
                <Text>Permissão indefinida</Text>
            </View>
        )
    }
    if(!permissions.granted) {
        return(
            <View>
                <Text>Permissão não autorizada.</Text>
            </View>
        )
    }
    if(foto){
        return(
            <view style={style.imagem} source={{uri: foto.uri}}>
                <image source={{uri: foto.uri}}/>
            </view>
        )
    }
    return(
        <View style={styles.container}>
            <CameraView  zoom={zoom} style={styles.camera} ref={camera}>
                <Button title="Tirar Foto" onPress={TirarFoto}></Button>
                <Button title="+" onPress={()=>TrocarZoom('+')}></Button>
                <Button title="-" onPress={()=>TrocarZoom('-')}></Button>
                

            </CameraView>
        </View>
    )
}

const styles = StyleSheet.create({
    container: {
      flex: 1,
      justifyContent: 'center',
    },
    imagem:{
        width: '90%',
        height:'90%'
    },
    camera: {
        flex: 1,
      }
    })
